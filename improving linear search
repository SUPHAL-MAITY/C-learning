///////////////Improving linear search///////////////


struct Array{
   int A[10];
   int size;
   int length;
};

void Display(struct Array arr){
  cout<<"The array elements are: "<<endl;
  for(int i=0;i<arr.length;i++){
   
      cout<< arr.A[i]<<endl;
  }
}

void swap(int *x, int *y){
  int temp=*x;
  *x=*y;
  *y=temp;
  
}
//////////////// to change in the orighinal , we need to use reference
int Search(struct Array &arr,int val){
  for(int i=0;i<arr.length;i++){
    if(arr.A[i]==val){
      swap(&arr.A[i],&arr.A[0]);
      return i;
      
    }  
    }
    
   return -1;
  
}





int main(){

  struct Array arr1={{2,3,9,16,18,21,28,32,35},10,9};
  Search(arr1,21);
  cout<<"The modified array is:"<<endl;
  Display(arr1);
 


  return 0;
}

     
//////////////
The modified array is:
The array elements are: 
21
3
9
16
18
2
28
32
35
